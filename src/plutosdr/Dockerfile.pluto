# Use an official Miniconda runtime as a parent image
FROM continuumio/miniconda3

# Use mamba instead for faster environment creation
RUN conda install -c conda-forge mamba

# Install necessary packages
RUN apt-get update && apt-get install -y \
   lsof \
   libgl1-mesa-glx \
   nano \
   libzmq3-dev \
   libusb-1.0-0 \
   libglib2.0-dev \
   libgtk-3-dev \
   libgtkdatabox-dev \
   libmatio-dev \
   libfftw3-dev \
   libxml2 \
   libxml2-dev \
   bison \
   flex \
   libavahi-common-dev \
   libavahi-client-dev \
   libcurl4-openssl-dev \
   libjansson-dev \
   libiio-dev \
   libaio-dev \
   libserialport-dev \
   libfmt-dev \
   g++ \
   libgstreamer1.0-dev \
   libgstreamer-plugins-base1.0-dev \
   libgstreamer-plugins-bad1.0-dev \
   gstreamer1.0-plugins-base \
   gstreamer1.0-plugins-good \
   gstreamer1.0-plugins-bad \
   gstreamer1.0-plugins-ugly \
   gstreamer1.0-libav \
   gstreamer1.0-tools \
   gstreamer1.0-x \
   gstreamer1.0-alsa \
   gstreamer1.0-gl \
   gstreamer1.0-gtk3 \
   gstreamer1.0-qt5 \
   gstreamer1.0-pulseaudio && \
   rm -rf /var/lib/apt/lists/*




# Set the working directory in the container
WORKDIR /src/plutosdr

# Copy the environment file into the container
COPY environment.yml .

#ENV QT_QPA_PLATFORM_PLUGIN_PATH=/usr/lib/x86_64-linux-gnu/qt5/plugins/platforms/libqxcb.so

# Create the conda environment
RUN conda env create -f environment.yml

# Ensure the environment is activated
SHELL ["conda", "run", "-n", "pluto", "/bin/bash", "-c"]

ENV RTMP_STREAMER_DIR=/rtmp
ENV PLUTO_CONDA_DIR=/opt/conda/envs/pluto
ENV LD_LIBRARY_PATH=${PLUTO_CONDA_DIR}/lib

RUN git clone https://github.com/acoustic-warfare/RtmpStreamer.git $RTMP_STREAMER_DIR && \
   cd ${RTMP_STREAMER_DIR} && \
   meson setup build/ -Dpython-bindings=true --native-file native-file.ini \
   -Dprefix=${PLUTO_CONDA_DIR} -Dlibdir=lib && \
   ninja -C build/ && \
   ninja -C build install

WORKDIR /src/plutosdr/WARA-PS_L2_Pluto_Agent
# Copy the rest of the application code into the container
COPY . .

# Make port 1935 available for RTMP streaming
EXPOSE 1935

# Run the Spectrogram
# CMD ["conda", "run", "-n", "pluto", "python", "./main.py"]
ENTRYPOINT [ "./start_waterfall.sh" ]
