# Use an official Miniconda runtime as a parent image
FROM continuumio/miniconda3

# Use mamba instead for faster environment creation
RUN conda install -c conda-forge mamba

# Install necessary packages
RUN apt-get update && apt-get install -y \
    lsof \
    libgl1-mesa-glx \
    nano \
    libzmq3-dev \
    libusb-1.0-0 \
    libglib2.0-dev \
    libgtk-3-dev \
    libgtkdatabox-dev \
    libmatio-dev \
    libfftw3-dev \
    libxml2 \
    libxml2-dev \
    bison \
    flex \
    libavahi-common-dev \
    libavahi-client-dev \
    libcurl4-openssl-dev \
    libjansson-dev \
    libiio-dev \
    libaio-dev \
    libserialport-dev \
    libgstreamer1.0-dev \
    libgstreamer-plugins-base1.0-dev \
    libgstreamer-plugins-bad1.0-dev \
    gstreamer1.0-plugins-base \
    gstreamer1.0-plugins-good \
    gstreamer1.0-plugins-bad \
    gstreamer1.0-plugins-ugly \
    gstreamer1.0-libav \
    gstreamer1.0-tools \
    gstreamer1.0-x \
    gstreamer1.0-alsa \
    gstreamer1.0-gl \
    gstreamer1.0-gtk3 \
    gstreamer1.0-qt5 \
    gstreamer1.0-pulseaudio && \
    rm -rf /var/lib/apt/lists/*

# Set the working directory in the container
WORKDIR /src/plutosdr

# Copy the environment file into the container
COPY environment.yml .

# Create the conda environment
RUN mamba env create -f environment.yml

# Ensure the environment is activated
SHELL ["conda", "run", "-n", "pluto", "/bin/bash", "-c"]

# Copy the rest of the application code into the container
COPY . .

ENTRYPOINT [ "python3 QtSpectrogram.py" ]

# Run the Spectrogram
#CMD ["python3", "./QtSpectrogram.py"]
