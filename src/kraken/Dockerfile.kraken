#Use an official Python runtime as a parent image
FROM continuumio/miniconda3 AS base

#Use mamba instead for faster environment creation
RUN conda install -c conda-forge mamba

#Install necessary packages
RUN apt-get update && apt-get install -y \
    lsof \
    libgl1-mesa-glx \
    nano \
    vim \
    g++ \ 
    libzmq3-dev \
    libusb-1.0-0 \
    libfmt-dev \
    libgstreamer1.0-dev \
    libgstreamer-plugins-base1.0-dev \
    libgstreamer-plugins-bad1.0-dev \
    gstreamer1.0-plugins-base \
    gstreamer1.0-plugins-good \
    gstreamer1.0-plugins-bad \
    gstreamer1.0-plugins-ugly \
    gstreamer1.0-libav \
    gstreamer1.0-tools \
    gstreamer1.0-x \
    gstreamer1.0-alsa \ 
    gstreamer1.0-gl \
    gstreamer1.0-gtk3 \ 
    gstreamer1.0-qt5 \
    gstreamer1.0-pulseaudio && \
    rm -rf /var/lib/apt/lists/*

#Set the working directory in the container
WORKDIR /src/kraken

#Copy the requirements file into the container
COPY environment.yml .

#Install any dependencies
RUN conda env create -f environment.yml

FROM base AS streamer-install
#Install rtmp-streamer library
SHELL [ "conda", "run", "-n", "kraken", "/bin/bash", "-c"]
ENV CONDA_DIR=/opt/conda
ENV RTMP_STREAMER_DIR=/rtmp-stream
ENV LD_LIBRARY_PATH=${CONDA_DIR}/envs/kraken/lib

RUN git clone https://github.com/acoustic-warfare/RtmpStreamer.git $RTMP_STREAMER_DIR && \
    cd ${RTMP_STREAMER_DIR} && \
    meson setup build/ -Dpython-bindings=true --native-file native-file.ini \
    -Dprefix=$CONDA_DIR/envs/kraken -Dlibdir=lib && \
    ninja -C build/ && \
    ninja -C build install


#Copy the start.sh script and make it executable
WORKDIR /src/kraken
COPY start_doa.sh .
RUN chmod +x start_doa.sh

#Copy the rest of the application code into the container
COPY . .

ENTRYPOINT ["./start_doa.sh"]
